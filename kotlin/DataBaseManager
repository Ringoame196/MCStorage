package ***************

import java.sql.Connection
import java.sql.DriverManager
import java.sql.SQLException
import java.sql.Statement

/* 
  build.gradle.kts
  implementation("org.xerial:sqlite-jdbc:3.46.1.0") // 最新バージョンを指定してください
*/
  
class DataBaseManager() {
    fun runSQLCommand(dbFilePath: String, command: String) {
        var statement: Statement? = null
        try {
            statement = connection(dbFilePath) // 接続
            statement?.executeUpdate(command)
        } catch (e: SQLException) {
            // エラーハンドリング
            println("SQL Error: ${e.message}")
        } finally {
            disconnect(statement?.connection) // 切断
        }
    }

    fun acquisitionCommand(dbFilePath: String, command: String): ResultSet? {
        var value: ResultSet? = null
        var statement: Statement? = null
        try {
            statement = connection(dbFilePath) // 接続
            value = statement?.executeQuery(command)
        } catch (e: SQLException) {
            // エラーハンドリング
            println("SQL Error: ${e.message}")
        } finally {
            disconnect(statement?.connection) // 切断
        }
        return value
    }

    private fun connection(dbFilePath: String): Statement? {
        val connection = DriverManager.getConnection("jdbc:sqlite:$dbFilePath")
        // SQLステートメントの作成
        val statement = connection.createStatement()
        statement.queryTimeout = 30 // タイムアウトの設定
        return statement
    }

    private fun disconnect(connection: Connection?) {
        connection?.close()
    }
}
